name: web-admin ui
on:
  push:
    branches:
      - main
      - master
      - develop

  pull_request:
    types: [opened, synchronize]

  release:
    types: [published]


jobs:
  whatisthecontext:
    runs-on: ubuntu-latest
    name: display the current build & deploy CI context and export useful values
    outputs:
      sha: ${{ steps.contextvals.outputs.sha }}
      built_at: ${{ steps.contextvals.outputs.built_at }}
      is_dev_deploy: ${{ github.ref == 'refs/heads/master' }}
      apiurl: ${{ steps.contextvals.outputs.apiurl }}
      targetbucket: ${{ steps.contextvals.outputs.targetbucket }}
      artifactbucket: ${{ 'ballotnav-dev-adminui-dev-logs'}}
      is_github_release: ${{ github.event_name == 'release' }}
      app_environment: ${{ steps.contextvals.outputs.app_environment }}
    steps:
      - name: Export values
        id: contextvals
        run: |
          SHA=${{ github.sha }}
          BUILT_AT=$(date "+%Y-%m-%d %H:%M:%S%z")
          if [ ${{ github.event_name }} == 'release' ]; then
            API_URL=https://api.ballotnav.org
            TARGET_BUCKET=admin.ballotnav.org
            WEB_APP_ENVIRONMENT=prd
          else
            API_URL=https://api.dev.ballotnav.org
            TARGET_BUCKET=admin.dev.ballotnav.org
            WEB_APP_ENVIRONMENT=dev
          fi

          # print these to the console for sanity checking
          printf "%s\n" "SHA: ${SHA:0:8}"
          printf "%s\n" "Target bucket ${TARGET_BUCKET}"
          printf "%s\n" "API url ${API_URL}"
          printf "%s\n" "Built at ${BUILT_AT}"
          printf "%s\n" "This web app is being built for this environment: ${WEB_APP_ENVIRONMENT}"

          # export them to github action outputs
          echo ::set-output name=sha::${SHA:0:8}
          echo ::set-output name=targetbucket::${TARGET_BUCKET}
          echo ::set-output name=apiurl::${API_URL}
          echo ::set-output name=built_at::${BUILT_AT}
          echo ::set-output name=app_environment::${WEB_APP_ENVIRONMENT}

  adminui:
    runs-on: ubuntu-latest
    needs: [whatisthecontext]
    strategy:
      matrix:
        node-version: [12.x]
    name: build & deploy adminui to ${{ needs.whatisthecontext.outputs.app_environment }}

    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - name: Install
        working-directory: ./client/web-admin
        run: npm ci

      - name: Build the app
        # we do not build the app again on release, instead we will unpack the already built artifact saved with the git SHA
        working-directory: ./client/web-admin
        run: |
          REACT_APP_API_URL=${{ needs.whatisthecontext.outputs.apiurl }} npm run build
          printf "%s\n" '{"version": "${{ needs.whatisthecontext.outputs.sha }}", "built_at": "${{ needs.whatisthecontext.outputs.built_at }}" }' > build/version.json

      - name: Create artifact
        uses: docker://busybox
      - name: tarball
        working-directory: ./client/web-admin
        run: |
          tar -czf adminui-${{ needs.whatisthecontext.outputs.sha }}.tar.gz build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Save artifact
        working-directory: ./client/web-admin
        run: |
          aws s3 cp adminui-${{ needs.whatisthecontext.outputs.sha }}.tar.gz s3://${{ needs.whatisthecontext.outputs.artifactbucket }}/artifacts/

      - name: Deploy to the web admin app to its environment
        working-directory: ./client/web-admin
        run: |
          printf "Start deploy for this environment: %s\n" ${{ needs.whatisthecontext.outputs.app_environment }}
          printf "%s\n" "======================================="
          printf "%s\n" "==*=*==*=*==*=*==*=*==*=*==*=*==*=*==*="
          printf "Deploying to bucket: %s\n" ${{ needs.whatisthecontext.outputs.targetbucket }}
          printf "%s\n" "======================================="
          printf "%s\n" "==*=*==*=*==*=*==*=*==*=*==*=*==*=*==*="
          aws s3 sync build s3://${{ needs.whatisthecontext.outputs.targetbucket }}
          aws s3 cp build/index.html s3://${{ needs.whatisthecontext.outputs.targetbucket }}/ --cache-control no-cache
          aws s3 cp build/version.json s3://${{ needs.whatisthecontext.outputs.targetbucket }}/ --cache-control no-cache
          printf "%s\n" "==*=*==*=*==*=*==*=*==*=*==*=*==*=*==*=="
          printf "%s\n" "ðŸš€ðŸ’¥ðŸš€ðŸ’¥ Completed the Deploy!! ðŸš€ðŸ’¥ðŸš€ðŸ’¥"
          printf "%s\n" "==*=*==*=*==*=*==*=*==*=*==*=*==*=*==*=*"
